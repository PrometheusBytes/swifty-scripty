{% for type in types.protocols where type.based.AutoMockable or type|annotated:"AutoMockable" %}
{% if type.name != "AutoMockable" %}
{% if type|!annotated:"skipKeyCreation" %}

// sourcery:file:{{ type.name }}+InjectionKey.swift
// swiftlint:disable all
{% if argument.scriptName != "SwiftyScripty" %}
import SwiftyScripty
{% endif %}

public struct {{ type.name }}Key: InjectionKey {
    public static var liveValue: {{ type.name }} { {{ type.name }}Impl() }
    public static var testValue: {{ type.name }} { _test }
    private static var _test = {{ type.name }}Mock()
}

extension InjectedValues {
    public var {{ type.name | lowerFirstWord }}: {{ type.name }} {
        get { return Self[{{ type.name }}Key.self] }
    }
}

// sourcery:end

{% endif %}
{% endif %}
{% endfor %}
